{"version":3,"file":"static/js/544.51629eca.chunk.js","mappings":"+TAEaA,EAAqBC,EAAAA,GAAAA,IAAH,iNAWlBC,EAAaD,EAAAA,GAAAA,KAAH,+VAaVE,EAAmBF,EAAAA,GAAAA,OAAH,gVAgBhBG,EAAkBH,EAAAA,GAAAA,MAAH,2P,SCmD5B,EA/Ee,WAAO,IAAD,EACnB,GAAwCI,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACIC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GACzC,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KALmB,wCAenB,sGAEIA,GAAa,GAFjB,UAGoBC,EAAAA,EAAAA,IAAUT,GAH9B,UAGUU,EAHV,OAIUP,EAAWO,EAAEC,KAAI,kBAA0B,CAC/CC,GADqB,EAAGA,GAExBC,KAFqB,EAAOA,KAG5BC,MAHqB,EAAaA,MAAb,IAKvBV,EAAYD,KACRO,EAAEK,OAAS,GAVnB,0CAWaX,EAAYM,IAXzB,eAaMN,EAAY,IAblB,kBAcaY,EAAAA,GAAAA,MACL,2DAfR,0DAmBIV,EAAS,KAAMW,SAnBnB,yBAqBIT,GAAa,GArBjB,8EAfmB,uBAQnBU,EAAAA,EAAAA,YAAU,WAKT,IAwCD,OACE,6BACE,SAAC1B,EAAD,WACE,UAACE,EAAD,CAAYyB,SAbG,SAAAC,GACnBA,EAAEC,iBACmB,KAAjBrB,EAAMsB,SA7CO,mCAiDjBC,CAAcvB,GACdA,EAAQ,IAJNgB,EAAAA,GAAAA,MAAY,0BAKf,EAKK,WACE,SAACpB,EAAD,CACE4B,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,cACZC,SAAU,SAAAR,GAAC,OAvBO,SAAApB,GAExBD,EAD6B,KAAVC,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAEhD,CAoBsB6B,CAAkBT,EAAEU,OAAOC,MAA/B,EACXA,MAAO/B,KAGT,SAACL,EAAD,CAAkB6B,KAAK,SAAvB,UACE,SAAC,MAAD,WAKLjB,IAAa,SAACyB,EAAA,EAAD,IACb3B,IAAS,wBAAKA,IACM,IAApBF,EAASY,SAAgB,SAACkB,EAAA,EAAD,CAAeC,OAAQ/B,MAGtD,C","sources":["page/Movies/Movies.styled.jsx","page/Movies/Movies.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const SearchbarContainer = styled.div`\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  margin-bottom: 20px;\n  color: #fff;\n  background-color: #ffffff;\n`;\n\nexport const SearchForm = styled.form`\n  margin-right: auto;\n  margin-left: auto;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { ImSearch } from 'react-icons/im';\nimport { toast } from 'react-toastify';\nimport { findQuery } from '../../API/moviesSearchApi';\nimport Loader from 'components/Loader';\nimport MoviesGallary from 'components/MoviesGallary';\nimport {\n  SearchbarContainer,\n  SearchForm,\n  SearchFormButton,\n  SearchFormInput,\n} from './Movies.styled';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  let query = searchParams.get('query') ?? '';\n  const [movieArr, setMovieArr] = useState([]);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n   \n\n  useEffect(() => {\n    if (!query) {\n      return;\n\n    }\n  })\n\n  async function fetchToSearch() {\n    try {\n      setIsLoading(true);\n      const r = await findQuery(query);\n      const movieArr = r.map(({ id, name, title }) => ({\n        id,\n        name,\n        title,\n      }));\n      setMovieArr(movieArr)\n      if (r.length > 0) {\n        return setMovieArr(r);\n      } else {\n        setMovieArr([]);\n        return toast.error(\n          'Sorry, there are no images matching your search query.'\n        );\n      }\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n    const updateQueryString = query => {\n      const nextParams = query !== '' ? { query } : {};\n      setSearchParams(nextParams);\n    };\n  const searchSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      toast.error('Please enter some world');\n      return;\n    }\n    fetchToSearch(query);\n    query = '';\n  };\n\n  return (\n    <main>\n      <SearchbarContainer>\n        <SearchForm onSubmit={searchSubmit}>\n          <SearchFormInput\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search film\"\n            onChange={e => updateQueryString(e.target.value)}\n            value={query}\n          />\n\n          <SearchFormButton type=\"submit\">\n            <ImSearch />\n          </SearchFormButton>\n        </SearchForm>\n      </SearchbarContainer>\n\n      {isLoading && <Loader />}\n      {error && <h2>{error}</h2>}\n      {movieArr.length !== 0 && <MoviesGallary movies={movieArr} />}\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["SearchbarContainer","styled","SearchForm","SearchFormButton","SearchFormInput","useSearchParams","searchParams","setSearchParams","query","get","useState","movieArr","setMovieArr","error","setError","isLoading","setIsLoading","findQuery","r","map","id","name","title","length","toast","message","useEffect","onSubmit","e","preventDefault","trim","fetchToSearch","type","autoComplete","autoFocus","placeholder","onChange","updateQueryString","target","value","Loader","MoviesGallary","movies"],"sourceRoot":""}